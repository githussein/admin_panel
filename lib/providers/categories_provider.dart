import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

import 'category.dart';
import '../models/http_exception.dart';

class CategoriesProvider with ChangeNotifier {
  //A list of pre-loaded categories
  List<Category> _categoriesItems = [
/*    Category(
      id: "ca1",
      title: "أزياء",
      imageUrl: "https://cdn-icons-png.flaticon.com/512/3050/3050253.png",
    ),
    Category(
      id: "ca2",
      title: "المتاجر الكبرى",
      imageUrl: "https://cdn-icons-png.flaticon.com/512/3081/3081559.png",
    ),*/
  ]; //private

  List<Category> get items {
    return [..._categoriesItems]; //return a copy
  }

  Category findById(String id) {
    return items.firstWhere((category) => category.id == id);
  }

  Future<void> addCategory(Category category) async {
    //Send data to the server
    final url = Uri.parse(
        'https://wafar-cash-demo-default-rtdb.europe-west1.firebasedatabase.app/categories.json');
    try {
      final response = await http.post(
        url,
        body: json.encode({
          'title': category.title,
          'imageUrl': category.imageUrl,
        }),
      );
      //This will only runs after the previous block
      //It is invisibly wrapped in a "then" block
      final newCategory = Category(
        //Use the unique id generated by Flutter
        id: json.decode(response.body)['name'],
        title: category.title,
        imageUrl: category.imageUrl,
      );
      //add the category to the local list on top
      _categoriesItems.insert(0, newCategory);
      notifyListeners();
    } catch (error) {
      throw error;
    }
  }

  //method to replace current category with edited category object
  Future<void> updateCategory(String id, Category newCategory) async {
    final url = Uri.parse(
        'https://wafar-cash-demo-default-rtdb.europe-west1.firebasedatabase.app/categories/$id.json');
    //get the index of the category with that ID
    final categoryIndex =
        _categoriesItems.indexWhere((category) => category.id == id);

    if (categoryIndex >= 0) {
      try {
        await http.patch(url,
            body: json.encode({
              'title': newCategory.title,
              'imageUrl': newCategory.imageUrl,
            }));
      } catch (error) {
        throw error;
      }

      _categoriesItems[categoryIndex] = newCategory;
      notifyListeners();
    }
  }

  Future<void> deleteCategory(String id) async {
    final url = Uri.parse(
        'https://wafar-cash-demo-default-rtdb.europe-west1.firebasedatabase.app/categories/$id.json');

    //perform Optimistic Updating
    final existingCategoryIndex =
        _categoriesItems.indexWhere((category) => category.id == id);
    var existingCategory =
        _categoriesItems[existingCategoryIndex]; //store a copy
    _categoriesItems.removeAt(existingCategoryIndex); //immediately delete
    notifyListeners();

    //Delete on the server and check errors
    final response = await http.delete(url);

    if (response.statusCode >= 400) {
      _categoriesItems.insert(existingCategoryIndex, existingCategory);
      notifyListeners();
      throw HttpException('Could not delete category'); //return
    }

    //if no problems occurred
    existingCategory = null; //remove it from memory
  }

  Future<void> fetchCategories() async {
    final url = Uri.parse(
        'https://wafar-cash-demo-default-rtdb.europe-west1.firebasedatabase.app/categories.json');
    try {
      final response = await http.get(url);
      final extractedData = json.decode(response.body) as Map<String, dynamic>;
      final List<Category> loadedCategoriesList = [];

      extractedData.forEach((categoryId, categoryData) {
        loadedCategoriesList.add(Category(
          id: categoryId,
          title: categoryData['title'],
          imageUrl: categoryData['imageUrl'],
        ));
      });
      _categoriesItems = loadedCategoriesList;
      notifyListeners();
    } catch (error) {
      throw (error);
    }
  }
}
